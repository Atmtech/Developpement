using System;
using System.Collections.Generic;
using System.IO;
using System.Reflection;
using System.Text.RegularExpressions;
using ATMTECH.Administration.Services.Interface;
using ATMTECH.Administration.Views.Base;
using ATMTECH.Administration.Views.Interface;
using ATMTECH.Common.Utils;
using ATMTECH.Entities;

namespace ATMTECH.Administration.Views
{
    public class GenerateEditorPresenter : BaseAdministrationPresenter<IGenerateEditorPresenter>
    {
        public IGenerateDataEditorService GenerateDataEditorService { get; set; }

        public GenerateEditorPresenter(IGenerateEditorPresenter view)
            : base(view)
        {
        }

        public override void OnViewInitialized()
        {
            InitData();
            base.OnViewInitialized();
        }

        public void InitData()
        {
            View.Entities = GenerateDataEditorService.GetAllEntityInformationToDictionnary(View.BinDirectory);


            GenerateDataModel();


            LoadData();
        }
        private void GenerateDataModel()
        {
            Dictionary<string, string> dictionary =
                GenerateDataEditorService.GetAllEntityInformationToDictionnary(View.BinDirectory);
            foreach (KeyValuePair<string, string> keyValuePair in dictionary)
            {
                GenerateDataEditorService.AutoGenerateDataModel(keyValuePair.Key, keyValuePair.Value);
            }
        }
        public void LoadData()
        {

            EntityInformation entityInformation = GenerateDataEditorService.GetEntityInformation(View.NameSpaceSelected);
            if (entityInformation != null)
            {
                View.NameSpace = View.NameSpaceSelected;
                View.PageAspx = entityInformation.PageAspx;
                View.PageTitle = entityInformation.PageTitle;
            }
        }
        public void SaveEntity()
        {
            EntityInformation entityInformation = GenerateDataEditorService.GetEntityInformation(View.NameSpaceSelected);
            entityInformation.NameSpace = View.NameSpaceSelected;
            entityInformation.PageAspx = View.PageAspx;
            entityInformation.PageTitle = View.PageTitle;
            entityInformation.DateModified = DateTime.Now;
            GenerateDataEditorService.SaveEntityInformation(entityInformation);

            GenerateDataEditorService.CreatePage(View.PageAspx, View.NameSpaceSelected, entityInformation.EntityProperties, View.DataEditorDirectory);
        }
        public IList<EntityProperty> GetEntityProperty(string parametreTrie, int nbEnreg, int indexDebutRangee)
        {
            EntityInformation entityInformation = GenerateDataEditorService.GetEntityInformation(View.NameSpaceSelected);
            if (entityInformation.EntityProperties != null)
            {
                return Paging<EntityProperty>.PagingAvecTri(entityInformation.EntityProperties, parametreTrie, nbEnreg, indexDebutRangee);
            }
            return null;
        }
        public int GetEntityPropertyCount()
        {
            EntityInformation entityInformation = GenerateDataEditorService.GetEntityInformation(View.NameSpaceSelected);
            return entityInformation.EntityProperties.Count;
        }
        public void UpdateEntityProperty(EntityProperty entityProperty)
        {
            GenerateDataEditorService.SaveEntityProperty(entityProperty);
        }
        public void DeleteEntityProperty(EntityProperty entityProperty)
        {
            entityProperty.IsActive = false;
            GenerateDataEditorService.SaveEntityProperty(entityProperty);
        }
        public void InsertEntityProperty(EntityProperty entityProperty)
        {
            GenerateDataEditorService.SaveEntityProperty(entityProperty);
        }
        public void GenerateAllPage()
        {
            GenerateDataModel();

            // Get all Enumeration
            IList<EntityInformation> entityInformations = GenerateDataEditorService.GetAllEntityInformation();
            foreach (EntityInformation entityInformation in entityInformations)
            {
                GenerateDataEditorService.CreatePage(entityInformation.PageAspx, entityInformation.NameSpace, entityInformation.EntityProperties, View.DataEditorDirectory);
            }
        }
    }
}
